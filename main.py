import webuntis
from ics import Event, Attendee
import datetime
import pytz

import config

session = webuntis.Session(username=config.username, password=config.password, server=config.server,
                           useragent=config.useragent, school=config.school)
session.login()

today = datetime.date.today()
utc_offset = datetime.datetime.now(pytz.timezone(config.timezone)).utcoffset().total_seconds() / 3600

schoolYear = next((x for x in session.schoolyears() if x.name.__contains__(config.schoolYear)), None)
if schoolYear is None:
    schoolYear = session.schoolyears().current

dateStart = max(today - datetime.timedelta(days=today.weekday() - config.timeRangeMin), schoolYear.start.date())
dateEnd = min(dateStart + datetime.timedelta(days=config.timeRangeMax), schoolYear.end.date())


def add_subject(calendar, subject, location, start, end, attendees):
    event = Event()
    event.name = str(subject)
    event.location = str(location)
    event.begin = start + datetime.timedelta(hours=-utc_offset)
    event.end = end + datetime.timedelta(hours=-utc_offset)
    event.description = 'Generated by Untis2iCal - Yunus1903'
    event.last_modified = datetime.datetime.now()
    for attendee in attendees:
        event.add_attendee(Attendee('', common_name=str(attendee)))
    calendar.events.add(event)


for c in config.classes:
    classObject = session.klassen(schoolyear=schoolYear).filter(name=c.name)[0]
    timetable = session.timetable(klasse=classObject, start=dateStart, end=dateEnd).combine(combine_breaks=True)

    for i in range(len(timetable)):
        subject = timetable[i].subjects[0].long_name
        location = ''
        try:
            if len(timetable[i].rooms) == 1:
                location = timetable[i].rooms[0]
            elif len(timetable[i].rooms) > 1:
                location = timetable[i].rooms
        except IndexError:
            print('IndexError')
        start = timetable[i].start
        end = timetable[i].end
        attendees = timetable[i].klassen
        if attendees is None:
            attendees = []

        if len(subject) > 0:
            add_subject(c.calendar, subject, location, start, end, attendees)

for s in config.subjects:
    subjectObject = session.subjects().filter(name=s.name)[0]
    timetable = session.timetable(subject=subjectObject, start=dateStart, end=dateEnd).combine(combine_breaks=True)

    for i in range(len(timetable)):
        subject = timetable[i].subjects[0].long_name
        location = ''
        try:
            if len(timetable[i].rooms) == 1:
                location = timetable[i].rooms[0]
            elif len(timetable[i].rooms) > 1:
                location = timetable[i].rooms
        except IndexError:
            print('IndexError')
        start = timetable[i].start
        end = timetable[i].end
        attendees = timetable[i].klassen
        if attendees is None:
            attendees = []

        if len(subject) > 0:
            add_subject(s.calendar, subject, location, start, end, attendees)

for c in config.classes:
    with open(config.ics_location + c.name + '.ics', 'w') as f:
        f.writelines(c.calendar)

for s in config.subjects:
    with open(config.ics_location + s.name + '.ics', 'w') as f:
        f.writelines(s.calendar)

session.logout()
